<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Yuri Ardila]]></title>
  <link href="http://ardiyu07.github.io/atom.xml" rel="self"/>
  <link href="http://ardiyu07.github.io/"/>
  <updated>2014-01-24T18:32:24+09:00</updated>
  <id>http://ardiyu07.github.io/</id>
  <author>
    <name><![CDATA[Yuri Ardila]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Introduction to Parallel Programming]]></title>
    <link href="http://ardiyu07.github.io/blog/2014/01/24/jp-introduction-to-parallel-programming/"/>
    <updated>2014-01-24T18:16:37+09:00</updated>
    <id>http://ardiyu07.github.io/blog/2014/01/24/jp-introduction-to-parallel-programming</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction to Parallel Programming]]></title>
    <link href="http://ardiyu07.github.io/blog/2014/01/24/id-introduction-to-parallel-programming/"/>
    <updated>2014-01-24T18:16:37+09:00</updated>
    <id>http://ardiyu07.github.io/blog/2014/01/24/id-introduction-to-parallel-programming</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introduction to Parallel Programming]]></title>
    <link href="http://ardiyu07.github.io/blog/2014/01/24/en-introduction-to-parallel-programming/"/>
    <updated>2014-01-24T18:16:37+09:00</updated>
    <id>http://ardiyu07.github.io/blog/2014/01/24/en-introduction-to-parallel-programming</id>
    <content type="html"><![CDATA[<p>Using exactly the same machine, same cpu, same gpu, same programming language,
<strong>Who doesn&rsquo;t want to see his programs run faster?</strong></p>

<!--more-->




<!---
MASUKIN MEME/GAMBAR MEME DISINI
-->


<p>Many parallel programming frameworks/APIs have been developed and released recently, and with the help of many amazing programmers worldwide, these APIs have also been wrapped beautifully into many front-end languages such as Python, Ruby, or even Javascript. Some also are under development to be ported to more delicate programming languages such as Haskell, Scala, or Clojure.</p>

<!---
CARI PROJECT PORTINGAN KE CUDA, OPENCL, ETC
-->


<p>Soo for those of you who haven&rsquo;t seen/experienced the elegance of parallel computing, what are you waiting for?</p>

<p>Let me share here some of the parallel programming frameworks I know, and I believe they are famous enough to not get disappointed when using it.</p>

<p>First of all, there is <a href="http://www.nvidia.com/content/devzone/index.html">CUDA</a>, developed by NVIDIA, a leading company in the Graphics Processing Unit devices. I have been developing some programs using CUDA for 2 years now, and the API itself is pretty simple and straightforward to use, and I am amazed with the number of sample programs they provided inside the CUDA Toolkit, makes us incredibly easy to learn some stuffs, not only how to use CUDA API but also some important algorithms and tuning-up for developing a parallel executed program. Having said so, actually it was pretty hard to develop using CUDA back then (when it was still version 1.x), but NVIDIA just released a new version of CUDA (CUDA 4.2 going to CUDA 5) and everything just became easier, to understand, to install, and to develop with that. Most important thing, note that since NVIDIA is the developer and it is not an open source software, CUDA is only available for NVIDIA&rsquo;s GPUs (from GeForce 8800 to the newest one). The technique of having your computation that is supposed to run sequentially on CPU is basically called a <strong>GPGPU (General Purposed GPU) computing</strong>.</p>

<!---
CONTOH CUDA
-->


<p>And then there is <a href="http://www.khronos.org/opencl/">OpenCL</a>, derived from <strong>Open Computing Language</strong>, initially developed by Apple and Khronos Group. OpenCL is a framework for parallelization and is aimed to be able to execute  in many platforms. At first OpenCL was only released with the standard C99 API but then they added the C++ wrappers to the runtime API, hence makes us easier to do some OOP stuff. OpenCL can run on some major vendors&#8217; devices: AMD, Intel, and NVIDIA, where each vendor has its own compiler (or library) to interpret and/or optimize the standardized OpenCL runtime API. afaik it is Khronos who&rsquo;s been leading the OpenCL development and standardizing the API. Since every vendor has different technology equipped to its device, each of them releases its own OpenCL programming SDK and this can be seen inside the website respectively: <a href="http://developer.amd.com/sdks/AMDAPPSDK/Pages/default.aspx">AMD OpenCL SDK</a>, <a href="http://software.intel.com/en-us/articles/vcsource-tools-opencl-sdk/">Intel OpenCL SDK</a>, and NVIDIA OpenCL SDK which comes with the CUDA Toolkit. Each SDK is provided with a unique library and some sample programs, and each vendor&rsquo;s compiler has its own way to optimize in compile time. IMO, learning OpenCL will not be that hard if you have previously done some CUDA programming.</p>

<p>Those two above are the APIs I&rsquo;ve been using for a while to do some parallel stuffs, and there are plenty more out there and you can get some of them for free (or maybe even already installed in your computer) but some aren&rsquo;t.</p>

<p>Examples for free APIs: <a href="http://openmp.org/wp/">OpenMP</a>, <a href="http://threadingbuildingblocks.org/">Intel&rsquo;s TBB</a>, <a href="http://software.intel.com/en-us/articles/intel-array-building-blocks/">Intel&rsquo;s ArBB</a>, <a href="https://computing.llnl.gov/tutorials/pthreads/">Pthreads</a></p>

<!---
CONTOH OpenMP, Intel's TBB, Intel's ArBB, Pthreads
-->


<p>Not free: <a href="http://www.pgroup.com/resources/accel.htm">PGI&rsquo;s Compiler with OpenACC</a>, <a href="http://www.caps-entreprise.com/fr/page/index.php?id=148&amp;amp;p_p=36">CAPS&#8217; Compiler with OpenACC</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cygwin + ipython. Super便利.]]></title>
    <link href="http://ardiyu07.github.io/blog/2014/01/22/jp-cygwin-ipython-perfection/"/>
    <updated>2014-01-22T14:27:00+09:00</updated>
    <id>http://ardiyu07.github.io/blog/2014/01/22/jp-cygwin-ipython-perfection</id>
    <content type="html"><![CDATA[<p>僕はUNIXのプログラミング環境が好きです。ただ、なんかGNU/LinuxのGUIはピンとこないですね。
Windows 7のGUIの方が使いやすいし、見た目もいい感じだし。（慣れの問題かな..）</p>

<p>僕みたいな人にとっては、<a href="http://www.cygwin.com/">Cygwin</a>を使うと便利です。</p>

<!--more-->


<p>しかし、まーWindowsの環境とPOSIXスタイルの環境は大分異なるのが理由かもしれないけど、
たまにはツールとかソフトをインストールするには、Cygwinだと非常に時間がかかってしまう
時もあります。GNU/Linuxだと、<code>yum</code>とか<code>apt-get</code>という必殺技がデフォルトでパッケージに入って
便利だけど、Cygwinだと残念ながらデフォルトのパッケージにはない。。
(最近<a href="http://code.google.com/p/apt-cyg/">apt-cyg</a>というのを見つけてテンション上がったけど)</p>

<p>こないだCygwin上で<a href="ipython.org">ipython</a>+<a href="numpy.org">numpy</a>+<a href="scipy.org">scipy</a>+<a href="matplotlib.org">matplotlib</a>を使いたくてインストールしてみたところ、
土曜日丸一日使ってしまった。</p>

<p>僕の休日を返せ。と言いたかったけど、<code>ipython</code>+<code>numpy</code>+<code>scipy</code>+<code>matplotlib</code>の素晴らしさで落ち着けた。</p>

<p>ということで言いたかったのは、</p>

<p>Cygwin + Ipythonは、す・ば・ら・し・い。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cygwin + ipython. Wajib Dicoba.]]></title>
    <link href="http://ardiyu07.github.io/blog/2014/01/22/id-cygwin-ipython-perfection/"/>
    <updated>2014-01-22T14:27:00+09:00</updated>
    <id>http://ardiyu07.github.io/blog/2014/01/22/id-cygwin-ipython-perfection</id>
    <content type="html"><![CDATA[<p>Saya termasuk orang yang suka sama UNIX environment, tapi gak terlalu suka sama GUI GNU/Linux. Karena itu sampe sekarang masih pake Windows 7.</p>

<p>Orang seperti kita, cocoknya pasti menggunakan <a href="http://www.cygwin.com/">Cygwin</a>.</p>

<!--more-->


<p>&lt;Tapi ada yang sangat disayangkan dari Cygwin, yaitu ketidakefisienan dalam menginstall sebuah tool atau software. Kadang-kadang gak ada jalan lain selain menginstall secara manual (lewat process yang umum seperti penggunaan <a href="http://en.wikipedia.org/wiki/GNU_build_system">autotools</a>. <code>./configure; make; make install</code>). Di GNU/Linux, ada tool yang praktis kayak <code>yum</code> atau <code>apt-get</code>, yang memungkinkan developer untuk menginstall hanya dalam satu baris command. (Sebenernya di Cygwin juga ada open-source project untuk ini, namanya <a href="http://code.google.com/p/apt-cyg/">apt-cyg</a>, tapi sayangnya bukan default package Cygwin).</p>

<p>Baru-baru ini saya menghadapi masalah untuk setup <a href="ipython.org">ipython</a> dengan <a href="numpy.org">numpy</a>+<a href="scipy.org">scipy</a>+<a href="matplotlib.org">matplotlib</a> di Cygwin, dan harus menggunakan weekend satu hari penuh untuk ini..</p>

<p>Tapi sepertinya usaha itu gak sia-sia.</p>

<p>Cygwin + Ipython. Mantap gan. Wajib dicoba!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cygwin + ipython. A Perfection.]]></title>
    <link href="http://ardiyu07.github.io/blog/2014/01/22/en-cygwin-ipython-perfection/"/>
    <updated>2014-01-22T14:27:00+09:00</updated>
    <id>http://ardiyu07.github.io/blog/2014/01/22/en-cygwin-ipython-perfection</id>
    <content type="html"><![CDATA[<p>I&rsquo;m one of those programmer who just loves anything about UNIX environment, but just feels weird about using Linux GUI hence stuck with Windows 7.</p>

<p>The most perfect tool for us is of course, <a href="http://www.cygwin.com/">Cygwin</a>.</p>

<!--more-->


<p>However, there are some (many, actually) weaknesses in Cygwin such as sometime you have to manually figure out how to install some softwares manually, instead of just invoking sudo apt-get in a Linux system. (Although there is an amazing project for this, <a href="http://code.google.com/p/apt-cyg/">apt-cyg</a>. But this is not Cygwin&rsquo;s default package.)</p>

<p>I recently just faced this problem when trying to install <a href="ipython.org">ipython</a> with <a href="numpy.org">numpy</a>+<a href="scipy.org">scipy</a>+<a href="matplotlib.org">matplotlib</a> in my system in Cygwin, and had to spend all day (which was Saturday), to finally have it installed correctly.</p>

<p>Nevertheless, It was really worth the time.</p>

<p>Cygwin + Ipython. is. just. amazing.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mukadimah]]></title>
    <link href="http://ardiyu07.github.io/blog/2014/01/21/mukadimah/"/>
    <updated>2014-01-21T18:18:18+09:00</updated>
    <id>http://ardiyu07.github.io/blog/2014/01/21/mukadimah</id>
    <content type="html"><![CDATA[<p>Test post doang. Gak usah dihiraukan. <i class='emoji smile'></i></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[初期化]]></title>
    <link href="http://ardiyu07.github.io/blog/2014/01/21/chu-qi-hua/"/>
    <updated>2014-01-21T18:17:40+09:00</updated>
    <id>http://ardiyu07.github.io/blog/2014/01/21/chu-qi-hua</id>
    <content type="html"><![CDATA[<p>テストポストです。無視してください。<i class='emoji smile'></i></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Post]]></title>
    <link href="http://ardiyu07.github.io/blog/2014/01/21/first-post/"/>
    <updated>2014-01-21T16:25:52+09:00</updated>
    <id>http://ardiyu07.github.io/blog/2014/01/21/first-post</id>
    <content type="html"><![CDATA[<p>Only a Test Post. Please Ignore. <i class='emoji smile'></i></p>
]]></content>
  </entry>
  
</feed>
